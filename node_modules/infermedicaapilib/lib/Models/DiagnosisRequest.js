
/**
 * InfermedicaAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 02/11/2017
 */
var BaseModel = require("./BaseModel");
/**
 * Creates an instance of DiagnosisRequest
 *
 * @constructor
 */
DiagnosisRequest = function (obj) {
    if(!obj) {
        this.age = null;     
        this.sex = null;     
        this.evaluatedAt = null;     
        this.evidence = null;     
        this.extras = null;     
        this.pursued = null;     
        //Append to variable dictionary
        this._variableDict['evaluatedAt'] = 'evaluated_at';
    } else {
        this.age = (obj.age !== undefined && obj.age !== null)? obj.age : null;
        this.sex = (obj.sex !== undefined && obj.sex !== null)? obj.sex : null;
        this.evaluatedAt = (obj.evaluated_at !== undefined && obj.evaluated_at !== null)? obj.evaluated_at : null;
        this.evidence = (obj.evidence !== undefined && obj.evidence !== null)? obj.evidence.map(function(model){
            return new Evidence(model);
        }) : null;
        this.extras = (obj.extras !== undefined && obj.extras !== null)? obj.extras : null;
        this.pursued = (obj.pursued !== undefined && obj.pursued !== null)? obj.pursued : null;
        //Append to variable dictionary
        this._variableDict['evaluatedAt'] = 'evaluated_at';
    }
};

DiagnosisRequest.prototype = new BaseModel();
DiagnosisRequest.prototype.constructor = DiagnosisRequest;

/**
 * TODO: Write general description for this method
 *
 * @return {int}
 */
DiagnosisRequest.prototype.getAge = function() {
    return this.age;
};

/**
 * Setter for Age
 * 
 * @param {int} value 
 */
DiagnosisRequest.prototype.setAge = function(value) {
    this.age = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {SexEnum}
 */
DiagnosisRequest.prototype.getSex = function() {
    return this.sex;
};

/**
 * Setter for Sex
 * 
 * @param {SexEnum} value 
 */
DiagnosisRequest.prototype.setSex = function(value) {
    this.sex = value;
};

/**
 * time when diagnosis was evaluated in ISO 8601 format
 *
 * @return {string|null}
 */
DiagnosisRequest.prototype.getEvaluatedAt = function() {
    return this.evaluatedAt;
};

/**
 * Setter for EvaluatedAt
 * 
 * @param {string|null} value 
 */
DiagnosisRequest.prototype.setEvaluatedAt = function(value) {
    this.evaluatedAt = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {array|null}
 */
DiagnosisRequest.prototype.getEvidence = function() {
    return this.evidence;
};

/**
 * Setter for Evidence
 * 
 * @param {array|null} value 
 */
DiagnosisRequest.prototype.setEvidence = function(value) {
    this.evidence = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {object|null}
 */
DiagnosisRequest.prototype.getExtras = function() {
    return this.extras;
};

/**
 * Setter for Extras
 * 
 * @param {object|null} value 
 */
DiagnosisRequest.prototype.setExtras = function(value) {
    this.extras = value;
};

/**
 * list of ids of pursued conditions
 *
 * @return {array|null}
 */
DiagnosisRequest.prototype.getPursued = function() {
    return this.pursued;
};

/**
 * Setter for Pursued
 * 
 * @param {array|null} value 
 */
DiagnosisRequest.prototype.setPursued = function(value) {
    this.pursued = value;
};


module.exports = DiagnosisRequest;
