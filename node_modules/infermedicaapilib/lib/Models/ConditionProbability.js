
/**
 * InfermedicaAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 02/11/2017
 */
var BaseModel = require("./BaseModel");
/**
 * Creates an instance of ConditionProbability
 *
 * @constructor
 */
ConditionProbability = function (obj) {
    if(!obj) {
        this.id = null;     
        this.name = null;     
        this.probability = null;     
    } else {
        this.id = (obj.id !== undefined && obj.id !== null)? obj.id : null;
        this.name = (obj.name !== undefined && obj.name !== null)? obj.name : null;
        this.probability = (obj.probability !== undefined && obj.probability !== null)? obj.probability : null;
    }
};

ConditionProbability.prototype = new BaseModel();
ConditionProbability.prototype.constructor = ConditionProbability;

/**
 * condition id
 *
 * @return {string}
 */
ConditionProbability.prototype.getId = function() {
    return this.id;
};

/**
 * Setter for Id
 * 
 * @param {string} value 
 */
ConditionProbability.prototype.setId = function(value) {
    this.id = value;
};

/**
 * condition name
 *
 * @return {string}
 */
ConditionProbability.prototype.getName = function() {
    return this.name;
};

/**
 * Setter for Name
 * 
 * @param {string} value 
 */
ConditionProbability.prototype.setName = function(value) {
    this.name = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {double}
 */
ConditionProbability.prototype.getProbability = function() {
    return this.probability;
};

/**
 * Setter for Probability
 * 
 * @param {double} value 
 */
ConditionProbability.prototype.setProbability = function(value) {
    this.probability = value;
};


module.exports = ConditionProbability;
