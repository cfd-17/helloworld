
/**
 * InfermedicaAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 02/11/2017
 */
var BaseModel = require("./BaseModel");
/**
 * Creates an instance of DatabaseInfo
 *
 * @constructor
 */
DatabaseInfo = function (obj) {
    if(!obj) {
        this.conditionsCount = null;     
        this.observationsCount = null;     
        this.updatedAt = null;     
        //Append to variable dictionary
        this._variableDict['conditionsCount'] = 'conditions_count';
        this._variableDict['observationsCount'] = 'observations_count';
        this._variableDict['updatedAt'] = 'updated_at';
    } else {
        this.conditionsCount = (obj.conditions_count !== undefined && obj.conditions_count !== null)? obj.conditions_count : null;
        this.observationsCount = (obj.observations_count !== undefined && obj.observations_count !== null)? obj.observations_count : null;
        this.updatedAt = (obj.updated_at !== undefined && obj.updated_at !== null)? obj.updated_at : null;
        //Append to variable dictionary
        this._variableDict['conditionsCount'] = 'conditions_count';
        this._variableDict['observationsCount'] = 'observations_count';
        this._variableDict['updatedAt'] = 'updated_at';
    }
};

DatabaseInfo.prototype = new BaseModel();
DatabaseInfo.prototype.constructor = DatabaseInfo;

/**
 * TODO: Write general description for this method
 *
 * @return {int}
 */
DatabaseInfo.prototype.getConditionsCount = function() {
    return this.conditionsCount;
};

/**
 * Setter for ConditionsCount
 * 
 * @param {int} value 
 */
DatabaseInfo.prototype.setConditionsCount = function(value) {
    this.conditionsCount = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {int}
 */
DatabaseInfo.prototype.getObservationsCount = function() {
    return this.observationsCount;
};

/**
 * Setter for ObservationsCount
 * 
 * @param {int} value 
 */
DatabaseInfo.prototype.setObservationsCount = function(value) {
    this.observationsCount = value;
};

/**
 * time of last database update in ISO 8601 format
 *
 * @return {string}
 */
DatabaseInfo.prototype.getUpdatedAt = function() {
    return this.updatedAt;
};

/**
 * Setter for UpdatedAt
 * 
 * @param {string} value 
 */
DatabaseInfo.prototype.setUpdatedAt = function(value) {
    this.updatedAt = value;
};


module.exports = DatabaseInfo;
