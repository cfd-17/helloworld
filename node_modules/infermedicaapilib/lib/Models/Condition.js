
/**
 * InfermedicaAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 02/11/2017
 */
var BaseModel = require("./BaseModel");
/**
 * Creates an instance of Condition
 *
 * @constructor
 */
Condition = function (obj) {
    if(!obj) {
        this.categories = null;     
        this.id = null;     
        this.name = null;     
        this.sexFilter = null;     
        this.acuteness = null;     
        this.prevalence = null;     
        this.severity = null;     
        //Append to variable dictionary
        this._variableDict['sexFilter'] = 'sex_filter';
    } else {
        this.categories = (obj.categories !== undefined && obj.categories !== null)? obj.categories : null;
        this.id = (obj.id !== undefined && obj.id !== null)? obj.id : null;
        this.name = (obj.name !== undefined && obj.name !== null)? obj.name : null;
        this.sexFilter = (obj.sex_filter !== undefined && obj.sex_filter !== null)? obj.sex_filter : null;
        this.acuteness = (obj.acuteness !== undefined && obj.acuteness !== null)? obj.acuteness : null;
        this.prevalence = (obj.prevalence !== undefined && obj.prevalence !== null)? obj.prevalence : null;
        this.severity = (obj.severity !== undefined && obj.severity !== null)? obj.severity : null;
        //Append to variable dictionary
        this._variableDict['sexFilter'] = 'sex_filter';
    }
};

Condition.prototype = new BaseModel();
Condition.prototype.constructor = Condition;

/**
 * TODO: Write general description for this method
 *
 * @return {array}
 */
Condition.prototype.getCategories = function() {
    return this.categories;
};

/**
 * Setter for Categories
 * 
 * @param {array} value 
 */
Condition.prototype.setCategories = function(value) {
    this.categories = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
Condition.prototype.getId = function() {
    return this.id;
};

/**
 * Setter for Id
 * 
 * @param {string} value 
 */
Condition.prototype.setId = function(value) {
    this.id = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
Condition.prototype.getName = function() {
    return this.name;
};

/**
 * Setter for Name
 * 
 * @param {string} value 
 */
Condition.prototype.setName = function(value) {
    this.name = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {SexFilterEnum}
 */
Condition.prototype.getSexFilter = function() {
    return this.sexFilter;
};

/**
 * Setter for SexFilter
 * 
 * @param {SexFilterEnum} value 
 */
Condition.prototype.setSexFilter = function(value) {
    this.sexFilter = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {AcutenessEnum|null}
 */
Condition.prototype.getAcuteness = function() {
    return this.acuteness;
};

/**
 * Setter for Acuteness
 * 
 * @param {AcutenessEnum|null} value 
 */
Condition.prototype.setAcuteness = function(value) {
    this.acuteness = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {PrevalenceEnum|null}
 */
Condition.prototype.getPrevalence = function() {
    return this.prevalence;
};

/**
 * Setter for Prevalence
 * 
 * @param {PrevalenceEnum|null} value 
 */
Condition.prototype.setPrevalence = function(value) {
    this.prevalence = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {SeverityEnum|null}
 */
Condition.prototype.getSeverity = function() {
    return this.severity;
};

/**
 * Setter for Severity
 * 
 * @param {SeverityEnum|null} value 
 */
Condition.prototype.setSeverity = function(value) {
    this.severity = value;
};


module.exports = Condition;
